{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Melih SEZER\\\\Documents\\\\GitHub\\\\ReactProjects\\\\14Kasim\\\\src\\\\Categories.js\";\nimport React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Categories extends Component {\n  constructor(...args) {\n    super(...args);\n    // Bileşenin durumu, kategorileri içerir\n    this.state = {\n      categories: []\n    };\n    // Kategorileri API'den almak için yardımcı fonksiyon\n    this.getCategories = () => {\n      fetch(\"http://localhost:3000/categories\").then(response => response.json()).then(data => this.setState({\n        categories: data\n      }));\n    };\n  }\n  // Bileşenin monte edildiği an, kategorileri almak için API'ye istek gönderilir\n  componentDidMount() {\n    this.getCategories();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: this.state.categories.map(category => /*#__PURE__*/_jsxDEV(ListGroupItem\n        // Etkin kategoriye uygun renk vermek için aktif durum kontrol edilir\n        , {\n          active: category.categoryName === this.props.currentCategory ? true : false\n          // Kategoriye tıklandığında belirli bir kategoriye geçmek için fonksiyon çağrılır\n          ,\n          onClick: () => this.props.changeCategory(category),\n          children: category.categoryName\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","ListGroup","ListGroupItem","jsxDEV","_jsxDEV","Categories","constructor","args","state","categories","getCategories","fetch","then","response","json","data","setState","componentDidMount","render","children","map","category","active","categoryName","props","currentCategory","onClick","changeCategory","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Melih SEZER/Documents/GitHub/ReactProjects/14Kasim/src/Categories.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\n\nexport default class Categories extends Component {\n  // Bileşenin durumu, kategorileri içerir\n  state = {\n    categories: [],\n  };\n\n  // Bileşenin monte edildiği an, kategorileri almak için API'ye istek gönderilir\n  componentDidMount() {\n    this.getCategories();\n  }\n\n  // Kategorileri API'den almak için yardımcı fonksiyon\n  getCategories = () => {\n    fetch(\"http://localhost:3000/categories\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ categories: data }));\n  };\n\n  render() {\n    return (\n      <div>\n        {/* Kategorileri listelemek için bir grup oluşturulur */}\n        <ListGroup>\n          {this.state.categories.map((category) => (\n            <ListGroupItem\n              // Etkin kategoriye uygun renk vermek için aktif durum kontrol edilir\n              active={\n                category.categoryName === this.props.currentCategory\n                  ? true\n                  : false\n              }\n              // Kategoriye tıklandığında belirli bir kategoriye geçmek için fonksiyon çağrılır\n              onClick={() => this.props.changeCategory(category)}\n              key={category.id}\n            >\n              {category.categoryName}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,aAAa,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,MAAMC,UAAU,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAChD;IAAA,KACAC,KAAK,GAAG;MACNC,UAAU,EAAE;IACd,CAAC;IAOD;IAAA,KACAC,aAAa,GAAG,MAAM;MACpBC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK,IAAI,CAACC,QAAQ,CAAC;QAAEP,UAAU,EAAEM;MAAK,CAAC,CAAC,CAAC;IACxD,CAAC;EAAA;EAVD;EACAE,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACP,aAAa,CAAC,CAAC;EACtB;EASAQ,MAAMA,CAAA,EAAG;IACP,oBACEd,OAAA;MAAAe,QAAA,eAEEf,OAAA,CAACH,SAAS;QAAAkB,QAAA,EACP,IAAI,CAACX,KAAK,CAACC,UAAU,CAACW,GAAG,CAAEC,QAAQ,iBAClCjB,OAAA,CAACF;QACC;QAAA;UACAoB,MAAM,EACJD,QAAQ,CAACE,YAAY,KAAK,IAAI,CAACC,KAAK,CAACC,eAAe,GAChD,IAAI,GACJ;UAEN;UAAA;UACAC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACF,KAAK,CAACG,cAAc,CAACN,QAAQ,CAAE;UAAAF,QAAA,EAGlDE,QAAQ,CAACE;QAAY,GAFjBF,QAAQ,CAACO,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGH,CAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}