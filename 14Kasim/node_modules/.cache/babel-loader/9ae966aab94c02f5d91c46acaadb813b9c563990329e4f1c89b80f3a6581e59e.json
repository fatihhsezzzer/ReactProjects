{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Melih SEZER\\\\Documents\\\\GitHub\\\\ReactProjects\\\\14Kasim\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport Categories from \"./Categories\";\nimport Products from \"./Products\";\nimport Header from \"./Header\";\nimport Logo from './resim.png';\nimport { Col, Container, Row } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    // Güncel kategori, ürünler ve sepet bilgileri için state kullanımı\n    this.state = {\n      currentCategory: \"\",\n      products: [],\n      cart: []\n    };\n    // Kategori değiştirmek için  ve ürünleri getiren fonksiyon\n    this.kategoriDegistir = kategori => {\n      this.setState({\n        currentCategory: kategori.kategoriAdi\n      });\n      this.urunleriGetir(kategori.id);\n    };\n    // kategori id ye göre ürünleri url olarak listeler\n    this.urunleriGetir = kategoriId => {\n      let url = \"http://localhost:3000/urunler\";\n      if (kategoriId) {\n        url += \"?kategoriId=\" + kategoriId;\n      }\n\n      //sor burayı\n      fetch(url).then(response => response.json()).then(data => this.setState({\n        products: data\n      }));\n    };\n    // Sepete ürün ekleyen fonksiyon\n    this.sepeteEkle = urun => {\n      let yeniSepet = this.state.cart;\n      var eklenenUrun = yeniSepet.find(c => c.urun.id === urun.id);\n      if (eklenenUrun) {\n        // Eğer ürün zaten sepette varsa miktarını artır\n        eklenenUrun.miktar += 1;\n      } else {\n        // Eğer ürün sepette yoksa, miktarı 1 olarak ekleyerek sepete ekle\n        yeniSepet.push({\n          urun: urun,\n          miktar: 1\n        });\n      }\n      this.setState({\n        cart: yeniSepet\n      });\n    };\n    // filter ile dolaşarak olamayan ürün haricindekileri tekrar tutar\n    this.sepettekiUrunuCikar = urun => {\n      let yeniSepet = this.state.cart.filter(c => c.urun.id !== urun.id);\n      this.setState({\n        cart: yeniSepet\n      });\n    };\n  }\n  componentDidMount() {\n    this.urunleriGetir();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        cart: this.state.cart,\n        sepettekiUrunuCikar: this.sepettekiUrunuCikar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"3\",\n          children: /*#__PURE__*/_jsxDEV(Categories, {\n            kategoriDegistir: this.kategoriDegistir,\n            currentCategory: this.state.currentCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"9\",\n          children: /*#__PURE__*/_jsxDEV(Products, {\n            sepeteEkle: this.sepeteEkle,\n            urunler: this.state.products,\n            currentCategory: this.state.currentCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Categories","Products","Header","Logo","Col","Container","Row","jsxDEV","_jsxDEV","App","constructor","args","state","currentCategory","products","cart","kategoriDegistir","kategori","setState","kategoriAdi","urunleriGetir","id","kategoriId","url","fetch","then","response","json","data","sepeteEkle","urun","yeniSepet","eklenenUrun","find","c","miktar","push","sepettekiUrunuCikar","filter","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","urunler"],"sources":["C:/Users/Melih SEZER/Documents/GitHub/ReactProjects/14Kasim/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport Categories from \"./Categories\";\nimport Products from \"./Products\";\nimport Header from \"./Header\";\nimport Logo from './resim.png';\nimport { Col, Container, Row } from \"reactstrap\";\n\n\nexport default class App extends Component {\n  // Güncel kategori, ürünler ve sepet bilgileri için state kullanımı\n  state = {\n    currentCategory: \"\",\n    products: [],\n    cart: [],\n  };\n\n  // Kategori değiştirmek için  ve ürünleri getiren fonksiyon\n  kategoriDegistir = (kategori) => {\n    this.setState({ currentCategory: kategori.kategoriAdi });\n    this.urunleriGetir(kategori.id);\n  };\n\n  // kategori id ye göre ürünleri url olarak listeler\n  urunleriGetir = (kategoriId) => {\n    let url = \"http://localhost:3000/urunler\";\n    if (kategoriId) {\n      url += \"?kategoriId=\" + kategoriId;\n    }\n\n    //sor burayı\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => this.setState({ products: data }));\n  };\n\n\n  componentDidMount() {\n    this.urunleriGetir();\n  }\n\n  // Sepete ürün ekleyen fonksiyon\n  sepeteEkle = (urun) => {\n    let yeniSepet = this.state.cart;\n    var eklenenUrun = yeniSepet.find((c) => c.urun.id === urun.id);\n    if (eklenenUrun) {\n      // Eğer ürün zaten sepette varsa miktarını artır\n      eklenenUrun.miktar += 1;\n    } else {\n      // Eğer ürün sepette yoksa, miktarı 1 olarak ekleyerek sepete ekle\n      yeniSepet.push({ urun: urun, miktar: 1 });\n    }\n   \n    this.setState({ cart:  yeniSepet });\n  };\n\n  // filter ile dolaşarak olamayan ürün haricindekileri tekrar tutar\n  sepettekiUrunuCikar = (urun) => {\n    let yeniSepet = this.state.cart.filter((c) => c.urun.id !== urun.id);\n    this.setState({ cart: yeniSepet });\n  };\n\n  \n  render() {\n    return (\n      <Container>\n   \n        <Header cart={this.state.cart} sepettekiUrunuCikar={this.sepettekiUrunuCikar} />\n\n       \n        <Row>\n          <Col xs=\"3\">\n           \n            <Categories\n              kategoriDegistir={this.kategoriDegistir}\n              currentCategory={this.state.currentCategory}\n            />\n          </Col>\n          <Col xs=\"9\">\n            \n            <Products\n              sepeteEkle={this.sepeteEkle}\n              urunler={this.state.products}\n              currentCategory={this.state.currentCategory}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}